// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Word {
  id         Int                  @id @default(autoincrement())
  word       String               @unique
  meaning_en String
  meaning_jp String
  types      Word_In_Types[]
  sentences  Sentence[]
  categories Word_In_Categories[]
  tags       Word_In_Tags[]
  note       String
  createdAt  DateTime             @default(now())
  updatedAt  DateTime             @updatedAt

  @@index([id], name: "id")
}

// A sentence can have multiple words, and a word can be in multiple sentences
model Sentence {
  id        Int      @id @default(autoincrement())
  sentence  String   @unique
  word      Word     @relation(fields: [word_id], references: [id])
  word_id   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Noun, verb, adjective, adverb, preposition, conjunction, interjection
model Type {
  id        Int             @id @default(autoincrement())
  name_en   String          @unique
  name_jp   String          @unique
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  words     Word_In_Types[]
}

// Eiken grades, TOEIC, TOEFL, IELTS, JLPT, etc.
model Category {
  id        Int                  @id @default(autoincrement())
  name_en   String               @unique
  name_jp   String               @unique
  createdAt DateTime             @default(now())
  updatedAt DateTime             @updatedAt
  words     Word_In_Categories[]
}

// Difficulty, frequency, etc.
model Tag {
  id        Int            @id @default(autoincrement())
  name      String         @unique
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  words     Word_In_Tags[]
}

model Word_In_Types {
  id        Int      @id @default(autoincrement())
  word      Word     @relation(fields: [word_id], references: [id])
  word_id   Int
  type      Type     @relation(fields: [type_id], references: [id])
  type_id   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Word_In_Categories {
  id          Int      @id @default(autoincrement())
  word        Word     @relation(fields: [word_id], references: [id])
  word_id     Int
  category    Category @relation(fields: [category_id], references: [id])
  category_id Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Word_In_Tags {
  id        Int      @id @default(autoincrement())
  word      Word     @relation(fields: [word_id], references: [id])
  word_id   Int
  tag       Tag      @relation(fields: [tag_id], references: [id])
  tag_id    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
